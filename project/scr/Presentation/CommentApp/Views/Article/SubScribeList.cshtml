@using PMS.OperationPlateform.Domain.Enums
@using static ProductManagement.Framework.Foundation.EnumExtension;
@model PMS.OperationPlateform.Domain.Entitys.Article_SubscribePreference
@{

    var schoolGradeEnums = Model.SchoolGradeEnums();
    var SchoolTypeEnums = Model.SchoolTypeEnums();
}
<div class="flex select">
    <div class="selected">
        已选:<span id="select-ass">
            <span>
                @(Model.Area?.name==null? (Model.City?.name == null? (Model.Province?.name == null?("未选"):Model.Province.name):Model.City.name):Model.Area.name)
            </span>
            ·
            <span>
                @if (schoolGradeEnums != null && schoolGradeEnums.Any())
                {
                    @:@schoolGradeEnums.First().GetDescription()
                }
                else
                {
                    @:未选
                }
            </span>
            ·
            <span>
                @if (SchoolTypeEnums != null && SchoolTypeEnums.Any())
                {
                    @:@SchoolTypeEnums.First().GetDescription()
                }
                else
                {
                    @:未选
                }
            </span>
        </span>
    </div>
    <a class="reselect-btn">重选</a>
</div>
<ul class="article-list subscribe">
    @await Html.PartialAsync("~/Views/Article/_Original.cshtml", model: ViewBag.Articles as IEnumerable<Sxb.Web.ViewModels.Article.ArticleListItemViewModel>)

</ul>
<div class="load-more text-center  " style="display:none">正在努力加载</div>
<div class="not-more-data">没有更多数据</div>
<div class="popup-box">
    <form class="preferenceForm" action="">
        <div>
            <h5 class="popup-title" style="margin-top: 0;">区域</h5>
            <div class="area-list flex justify-content-between">
                <div class="province swiper-trigger " data-picker=".picker-provinces">
                    @if (Model.Province == null)
                    {
                        <input type="hidden" name="province" value="0" />
                        <div data-id="0">请选择</div>
                        <i class="arrow"></i>
                    }
                    else
                    {
                        <input type="hidden" name="province" value="@Model.Province.id" />
                        <div data-id="@Model.Province.id">@Model.Province.name</div>
                        <i class="arrow"></i>
                    }
                </div>
                <div class="city swiper-trigger" data-picker=".picker-citys">
                    @if (Model.City == null)
                    {
                        <input type="hidden" name="city" value="0" />
                        <div data-id="0">请选择</div>
                        <i class="arrow"></i>
                    }
                    else
                    {
                        <input type="hidden" name="city" value="@Model.City.id" />
                        <div data-id="@Model.City.id">@Model.City.name</div>
                        <i class="arrow"></i>
                    }
                </div>
                <div class="area swiper-trigger" data-picker=".picker-areas">
                    @if (Model.Area == null)
                    {
                        <input type="hidden" name="area" value="0" />
                        <div data-id="0">请选择</div>
                        <i class="arrow"></i>
                    }
                    else
                    {
                        <input type="hidden" name="area" value="@Model.Area.id" />
                        <div data-id="@Model.Area.id">@Model.Area.name</div>
                        <i class="arrow"></i>
                    }

                </div>
            </div>
            <h5 class="popup-title">学段</h5>
            <div class="school  swiper-trigger" data-picker=".picker-school">

                @if (schoolGradeEnums == null)
                {
                    <input type="hidden" name="grade" value="0">
                    <div data-inx="0" data-id="0">请选择<i class="arrow"></i></div>
                }
                else
                {

                    <input type="hidden" name="grade" value="@((int)schoolGradeEnums.First())">
                    <div data-inx="0" data-id="@((int)schoolGradeEnums.First())">@(schoolGradeEnums.First().GetDescription())<i class="arrow"></i></div>
                }

            </div>
            <h5 class="popup-title">学校类型</h5>
            <div class="school-type swiper-trigger" data-picker=".picker-school-type">

                @if (SchoolTypeEnums == null)
                {
                    <input type="hidden" name="schoolType" value="0">
                    <div data-inx="0" data-id="0">请选择<i class="arrow"></i></div>
                }
                else
                {
                    <input type="hidden" name="schoolType" value="@((int)SchoolTypeEnums.First())">
                    <div data-inx="0" data-id="@((int)SchoolTypeEnums.First())">@(SchoolTypeEnums.First().GetDescription())<i class="arrow"></i></div>
                }
            </div>
            <h5 class="follow popup-title">
                推送关注学校攻略
                <input type="checkbox" name="isPublish" id="s1" value="true" @(Model.IsPushSubscibeSchool.GetValueOrDefault() ? "checked" : "")>
                <label for="s1"><em></em></label>
            </h5>
        </div>

    </form>
    <div class="btn flex text-center">
        <a class="cancel">取消</a>
        <a class="submit">确定</a>
    </div>
</div>
<div class="other-picker">
    <div class="picker-head flex justify-content-between">
        <span class="cancel">取消</span>
        <span class="confirm">确认</span>
    </div>
    <div class="swiper-container text-center picker-school">
        <ul class="swiper-wrapper">
            <li class="swiper-slide" data-id="0">请选择</li>
            @foreach (Enum item in Enum.GetValues(typeof(PMS.OperationPlateform.Domain.Enums.SchoolGrade)))
            {
                <li class="swiper-slide" data-id="@((int)(PMS.OperationPlateform.Domain.Enums.SchoolGrade)item)">@item.GetDescription()</li>
            }
        </ul>
    </div>
    <div class="swiper-container text-center picker-school-type">
        <ul class="swiper-wrapper">
            <li class="swiper-slide" data-id="0">请选择</li>
            @foreach (Enum item in Enum.GetValues(typeof(PMS.OperationPlateform.Domain.Enums.SchoolType)))
            {
                <li class="swiper-slide" data-id="@((int)(PMS.OperationPlateform.Domain.Enums.SchoolType)item)">@item.GetDescription()</li>
            }
        </ul>
    </div>
    <!--省 swiper-->
    <div class="swiper-container text-center picker-provinces">
        <ul class="swiper-wrapper">
            <li class="swiper-slide" data-id="0">请选择</li>
            @foreach (PMS.OperationPlateform.Domain.Entitys.local_v2 item in ViewBag.Provinces)
            {
                <li class="swiper-slide" data-id="@item.id">@item.name</li>
            }
        </ul>
    </div>
    <!--市 swiper-->
    <div class="swiper-container text-center picker-citys">

        <ul class="swiper-wrapper">
            <li class="swiper-slide" data-id="0">请选择</li>
            @if (ViewBag.Citys != null)
            {
                @foreach (PMS.OperationPlateform.Domain.Entitys.local_v2 item in ViewBag.Citys)
                {
                    <li class="swiper-slide" data-id="@item.id">@item.name</li>
                }
            }
        </ul>
    </div>
    <!--区 swiper-->
    <div class="swiper-container text-center picker-areas">

        <ul class="swiper-wrapper">
            <li class="swiper-slide" data-id="0">请选择</li>
            @if (ViewBag.Areas != null)
            {
                @foreach (PMS.OperationPlateform.Domain.Entitys.local_v2 item in ViewBag.Areas)
                {
                    <li class="swiper-slide" data-id="@item.id">@item.name</li>
                }
            }
        </ul>
    </div>
    <div class="line"></div>
</div>
<script>




    function subscribe_init() {

        var subscribe_offset = @ViewBag.Offset;
        var subscribe_limit = @ViewBag.Limit;

        var $picker_citys = $('.picker-citys');
        var $picker_areas = $('.picker-areas');
        var selectedIndex = [0, 0, 0]; /* 默认选中的地区 */



        var swipers = {};

        //省市区swiper
        var provinceSwiper = new Swiper('.other-picker .swiper-container.picker-provinces', {
            direction: 'vertical',
            height: 35,
            observer: true,
            observeParents: true,
            speed: 500,
            freeMode: true,
            on: {
                touchEnd: function () {
                    select.params.freeMode = false;
                },
                touchStart: function (event) {
                    select.params.freeMode = true;
                },
            },
        });
        swipers['.picker-provinces'] = provinceSwiper;
        var citySwiper = new Swiper('.other-picker .swiper-container.picker-citys', {
            direction: 'vertical',
            height: 35,
            observer: true,
            observeParents: true,
            speed: 500,
            freeMode: true,
            on: {
                touchEnd: function () {
                    select.params.freeMode = false;
                },
                touchStart: function (event) {
                    select.params.freeMode = true;
                },
            },
        });
        swipers['.picker-citys'] = citySwiper;
        var areaSwiper = new Swiper('.other-picker .swiper-container.picker-areas', {
            direction: 'vertical',
            height: 35,
            observer: true,
            observeParents: true,
            speed: 500,
            freeMode: true,
            on: {
                touchEnd: function () {
                    select.params.freeMode = false;
                },
                touchStart: function (event) {
                    select.params.freeMode = true;
                },
            },
         });
        swipers['.picker-areas'] = areaSwiper;
        // 学段/学校类型选择
        var select = new Swiper('.other-picker .swiper-container.picker-school', {
            direction: 'vertical',
            height: 35,
            observer: true,
            observeParents: true,
            speed: 500,
            freeMode: true,
            on: {
                touchEnd: function () {
                    select.params.freeMode = false;
                },
                touchStart: function (event) {
                    select.params.freeMode = true;
                },
            },
        });
        swipers['.picker-school'] = select;
        var select2 = new Swiper('.other-picker .swiper-container.picker-school-type', {
            direction: 'vertical',
            height: 35,
            observer: true,
            observeParents: true,
            speed: 500,
            freeMode: true,
            on: {
                touchEnd: function () {
                    select.params.freeMode = false;
                },
                touchStart: function (event) {
                    select.params.freeMode = true;
                },
            },
        })
        swipers['.picker-school-type'] = select2;

        var currentPicker;
        var currentTrigger
        $('.popup-box').on('click', '.swiper-trigger>div', function () {
            var _this = $(this);
            currentTrigger = _this.parent('.swiper-trigger');
            var map_picker = currentTrigger.data('picker');
            currentPicker = $(map_picker);
            var allTrigger = $('.swiper-trigger');
            $('.other-picker').animate({ 'bottom': 0 });
            $('.curtain2').fadeIn();
            currentPicker.show();
            allTrigger.each((index, el) => {
                var in_picker = $(el).data('picker');
                if (in_picker != map_picker) {
                    $(in_picker).hide();
                }
            });
            var selectedId = _this.data('id');
            $(map_picker + ' .swiper-wrapper li').each((index, el) => {
                if ($(el).data('id') == selectedId) {
                    swipers[map_picker].slideTo(index, 1, false);
                }
            });

        });


        $('.other-picker').on('click', '.confirm', function () {

            var activeItem = currentPicker.find('.swiper-slide-active');
            //取出active的信息
            var id = activeItem.data('id');
            var value = activeItem.text();
            console.log(id + value);
            currentTrigger.find('input').val(id);
            var div_item = currentTrigger.find('div')
            div_item.data('id', id);
            div_item.text(value);
            $('.other-picker').animate({ 'bottom': '-50%' });
            $('.curtain2').fadeOut();
            //如果是省和市需要特殊处理
            if (currentTrigger.hasClass('province')) {
                LinkageCitys(id);
                initTrigger('area');

            }

            if (currentTrigger.hasClass('city')) {
                LinkageAreas(id);
            }

        });

        //联动市
        function LinkageCitys(pid) {
            var cityTrigger = $('.city.swiper-trigger');
            cityTrigger.find('input').val('0');
            cityTrigger.find('div').data('id', 0);
            cityTrigger.find('div').text('请选择');

            RequestLocals(pid, (data) => {
                var swiper_ul = $picker_citys.find('.swiper-wrapper');
                swiper_ul.empty();
                swiper_ul.append('<li class="swiper-slide" data-id="0">请选择</li>');
                $.each(data, (index, value) => {
                    console.log(value);
                    swiper_ul.append('<li class="swiper-slide" data-id="' + value.id + '">' + value.name + '</li>');
                });
            });
        }

        //联动区域
        function LinkageAreas(cid) {
             var areaTrigger = $('.area.swiper-trigger');
            areaTrigger.find('input').val('0');
            areaTrigger.find('div').data('id', 0);
            areaTrigger.find('div').text('请选择');
             RequestLocals(cid, (data) => {
                var swiper_ul = $picker_areas.find('.swiper-wrapper');
                swiper_ul.empty();
                swiper_ul.append('<li class="swiper-slide" data-id="0">请选择</li>');
                $.each(data, (index, value) => {
                    console.log(value);
                    swiper_ul.append('<li class="swiper-slide" data-id="' + value.id + '">' + value.name + '</li>');
                });
            });
        }


        function initTrigger(type) {
            var trigger = $('.' + type + '.swiper-trigger');
            trigger.find('input').val('0');
            trigger.find('div').data('id', 0);
            trigger.find('div').text('请选择');
            var swiper_ul = $('.picker-' + type + 's').find('.swiper-wrapper');
            swiper_ul.empty();
        }

        function RequestLocals(parentId,handleDatas) {
            $.ajax({
                url: '@Url.Action("GetLocals","Article")',
                type: 'get',
                data: { pid: parentId },
                success: function (res) {
                    if (res.statu == 1) {
                        handleDatas(res.data);
                    } else {
                        console.log(res.msg);
                    }
                }
            })
        }


        $('.popup-box .submit').click(function () {

            var $form = $('.preferenceForm');
            var queryString = $form.serialize();
            console.log($form.serializeArray());
            $.ajax({
                url: '@Url.Action("SaveSubscribePreference","Article")',
                type: 'post',
                data: queryString,
                success: function (res) {
                    if (res.statu == 1) {
                        window.location = res.redirect_url;

                    } else {
                        alert('保存异常');
                    }

                }
            });
        });





    }


    if ($) {
        subscribe_init();
    } else {
        alert('无效加载')
    }

</script>