@model PMS.UserManage.Application.ModelDto.Login.Get
@{
    ViewData["Title"] = "登录";
    Layout = "~/Views/PC/Shared/_PCLoginLayout.cshtml";
    string UserAgent = Context.Request.Headers["User-Agent"].ToString().ToLower();
    ViewBag.Login = true;
}

@section css{
    <link rel="stylesheet" href="@ViewBag.FileHost_PC/css/tool/tool.css">
    <link rel="stylesheet" href="@ViewBag.FileHost_PC/css/login/login_1.css" />
}

<div class="container d-flex">
    <div class="image">
        <img src="@ViewBag.FileHost_PC/imgs/login/people2@2x.png" alt="">
    </div>
    <div class="login2">
        <form id="loginForm" class="form">
            <ul class="login-mode d-flex font-14 justify-content-between">
                <li class="active">验证码登录</li>
                <li style="color: #B3B3B3;">|</li>
                <li>密码登录</li>
            </ul>
            <section>
                <div class="phone-num d-flex">
                    <a class="area-code font-14" data-for="nationCode">
                        <span>+86 <i class="arrow"></i></span>
                        <input id="nationCode" type="hidden" name="nationCode" value="86" />
                    </a>
                    <input id="txtMobile" autocomplete="off" type="number" placeholder="请输入手机号" class="font-14">
                    <input type="hidden" id="mobile" name="mobile" />
                </div>
                <div class="code-list">
                    <ul class="font-14">
                        <li class="d-flex">中国<span data-code="86">+86</span></li>
                        <li class="d-flex">中国香港<span data-code="852">+852</span></li>
                        <li class="d-flex">中国澳门<span data-code="853">+853</span></li>
                        <li class="d-flex">中国台湾<span data-code="886">+886</span></li>
                    </ul>
                </div>
                <div id="imgCode" style="display:none;">
                    <div class="verification-code d-flex justify-content-between">
                        <input id="imgrnd" type="text" placeholder="请输入图形验证码" class="font-14" autocomplete="off">
                        <img />
                    </div>
                </div>
                <div id="rndLogin">
                    <div class="verification-code d-flex justify-content-between">
                        <input id="txtRnd" name="rnd" type="number" placeholder="请输入验证码" class="font-14" autocomplete="off">
                        <a id="getCode" class="get-code text-center font-12">获取验证码</a>
                    </div>
                </div>
                <div id="passwordLogin" style="display: none;">
                    <div class="password d-flex justify-content-between">
                        <input id="txtPassword" autocomplete="off" type="password" placeholder="请输入密码" class="font-14">
                        <input type="hidden" id="password" name="password" />
                        <input type="password" style="display:none;" />
                        <i class="icon"></i>
                    </div>
                </div>
                <div class="remember d-flex justify-content-between">
                    <div class="d-flex checkbox" id="rememberPhone">
                        <a class="font-12 position-relative">记住手机号</a>
                    </div>
                    <a href="@Url.Action("ForgetPSW", new { ReturnUrl = Uri.UnescapeDataString(ViewBag.ReturnUrl) })" class="forget-password font-12" style="display: none;">忘记密码？</a>
                </div>
            </section>
            <input type="hidden" name="kid" value="@Model.Kid" />
            <a href="#" id="submit" class="login-btn font-14 text-center d-block">登录</a>
            <p class="must font-12">新用户直接登录系统将为您自动注册账号</p>
            @*<a class="number font-14">+86</a>
                <input id="nationCode" type="hidden" name="nationCode" value="86" />
                <input id="txtMobile" class="telephone form-control" type="text" placeholder="手机号" />
                <input type="hidden" id="mobile" name="mobile" />
                <div>
                    <div class="verification-code"></div>
                    <input id="txtRnd" name="rnd" type="text" maxlength="6" placeholder="请输入验证码" autocomplete="off" class="code form-control" />
                    <a id="getCode" class="font-12 getcode">获取验证码</a>
                </div>
                <div style="display: none;">
                    <div class="password"></div>
                    <input id="txtPassword" type="password" placeholder="请输入密码" autocomplete="new-password" class="code form-control" />
                    <input type="hidden" id="password" name="password" />
                    <a href="@Url.Action("ForgetPSW")" class="forget-password">忘记密码？</a>
                </div>
                <p class="remeb">
                    <input class="checkbox" type="checkbox" />
                    <a class="font-12">记住手机号</a>
                </p>
                <input type="hidden" name="kid" value="@Model.Kid" />
                <a id="submit" class="btn btn-primary form-control can-login">登录</a>
                <p class="must font-12">新用户直接登录系统将为您自动注册账号</p>*@
            <ul class="icon3 d-flex justify-content-between">
                <li class="wx"><a href="@ViewBag.Login_Uri_WX"><i class="icon"></i></a></li>
                @if (!(UserAgent.Contains("micromessenger") && UserAgent.Contains("miniprogram")))
                {
                    <li class="qq"><a href="@ViewBag.Login_Uri_QQ"><i class="icon"></i></a></li>
                }
            </ul>
            <p class="cont font-12">
                完成登录即代表您已阅读并同意<a href="@Url.Action("TermsOfService","Agreement")" class="clause">“服务条款”</a>、<a href="@Url.Action("Privacy","Agreement")" class="clause">“隐私条款”</a>
            </p>
        </form>
    </div>
</div>


@section js{
    <script src="@ViewBag.FileHost_M/js/login/login.js"></script>

    <script src="//aeu.alicdn.com/waf/interfaceacting.js"></script>
    <script src="//aeu.alicdn.com/waf/antidomxss.js"></script>

    <script type="text/javascript" src="@ViewBag.FileHost/js/plugin/rsa/System.debug.js"></script>
    <script type="text/javascript" src="@ViewBag.FileHost/js/plugin/rsa/System.Text.debug.js"></script>
    <script type="text/javascript" src="@ViewBag.FileHost/js/plugin/rsa/System.Security.Cryptography.RSA.debug.js"></script>
    <script type="text/javascript" src="@ViewBag.FileHost/js/plugin/rsa/System.Convert.debug.js"></script>
    <script type="text/javascript" src="@ViewBag.FileHost/js/plugin/rsa/System.Security.Cryptography.debug.js"></script>
    <script type="text/javascript" src="@ViewBag.FileHost/js/plugin/rsa/System.BigInt.debug.js"></script>
    <script type="text/javascript">
        var publickey = '@Html.Raw(Model.PublicKey)';
        $('#txtRnd').val('');
        $('#txtPassword').val('');
        $('#submit').click(function (e) {
            e.preventDefault();
            var _this = $(this);
            if (_this.hasClass('can-login')) {
                _this.removeClass('can-login');
                _this.text('登陆中，请稍后...')
                if ($('#txtMobile').val() != '') {
                    $('#mobile').val(do_encrypt($('#txtMobile').val()));
                } else {
                    _this.addClass('can-login');
                    return;
                }
                if ($('#txtPassword').val() != '') {
                    $('#password').val(do_encrypt($('#txtPassword').val()));
                } else if ($('#txtRnd').val() == '') {
                    _this.addClass('can-login');
                    return;
                }

                if ($('#rememberPhone').hasClass('check')) {
                    localStorage.setItem('loginPhone', $('#txtMobile').val());
                    localStorage.setItem('loginNationCode', $('#nationCode').val());
                } else {
                    localStorage.removeItem('loginPhone');
                    localStorage.removeItem('loginNationCode');
                }

                $.ajax({
                    type: 'post',
                    data: $('#loginForm').serialize(),
                    dataType: 'json',
                    success: function (json) {
                        if (json.status == 0) {
                            _this.text('登录成功，正在跳转...')
                            location.replace(json.ReturnUrl || '/');
                        } else {
                            _this.text('登录')
                            alert(json.errorDescription);
                        }
                    },
                    complete: function () {
                        _this.addClass('can-login');
                    }
                });
            }
        });

    //====================================================================================

    function do_encrypt(plaintext) {
        var decryptedBytes = System.Text.Encoding.UTF8.GetBytes(plaintext);
        var doOaepPadding = false;
        // ------------------------------------------------
        // Encrypt
        // ------------------------------------------------
        var rsa = GetNewRsaProvider();
        // Import the RSA Key information.
        rsa.ImportParameters(GetRsaKey(false));
        // Encrypt the passed byte array and specify OAEP padding.
        var encryptedBytes = rsa.Encrypt(decryptedBytes, doOaepPadding);
        var encryptedString = System.Convert.ToBase64String(encryptedBytes)
        // ------------------------------------------------
        // Display the encrypted data.
        //var encryptedString = System.BitConverter.ToString(encryptedBytes, "");
        return encryptedString;
    }
    function GetRsaKey(includePrivateParameters) {
        var xmlParams = publickey;
        // ------------------------------------------------
        // RSA Keys
        // ------------------------------------------------
        var rsa = GetNewRsaProvider();
        // Import parameters from xml.
        rsa.FromXmlString(xmlParams);
        // Export RSA key to RSAParameters and include:
        //    false - Only public key required for encryption.
        //    true  - Private key required for decryption.
        return rsa.ExportParameters(includePrivateParameters);
    }
    function GetNewRsaProvider(dwKeySize) {
        // Create a new instance of RSACryptoServiceProvider.
        if (!dwKeySize) dwKeySize = 512;
        return new System.Security.Cryptography.RSACryptoServiceProvider(dwKeySize);
        }


    </script>
}
